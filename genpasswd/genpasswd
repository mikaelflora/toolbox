#!/bin/bash


# ----------------------------------------------------------------------------
readonly AUTHOR="Mikael Flora"
readonly MAINTAINER="<https://github.com/mikaelflora/toolbox/issues>"
readonly APPLICATION=${0##*/}
readonly VERSION="0.1.3"
readonly DATE="2019-04-11"
readonly LICENSE="GPLv3"
readonly BRIEF="Generate random password"
# ----------------------------------------------------------------------------


# cli functions -->
cli.version () {
  echo "\
${APPLICATION} v${VERSION} (${DATE})

Licence ${LICENSE}. Written by ${AUTHOR}."
 
  exit 0
}

cli.usage () {
  echo "\
Synopsys:
  ${BRIEF}.

Usage:
  ${APPLICATION} [-l length] [-s number]
  ${APPLICATION} [-h | -v]

Options:
  -h
    display this help and exit
  -l length
    password length [4-99] (default: 12)
  -s number
    number of possible symbols [2,10,16,52,62,72,82,94] (default: 72)
  -v
    display version information and exit

Examples:
  ${APPLICATION}
  ${APPLICATION} -l8 -s94

Bugs:
  Bug reports to ${MAINTAINER}."
  exit 0
}

cli.error () {
  [ -n "${*}" ] && echo "${*}"

  echo "get more information with \`${APPLICATION} -h\`"

  exit 1
}
# cli functions <--


# parse cli -->
length=12
symbols='[:alnum:]?!()[]%$*#' 

while getopts ":hvl:s:" option; do
  case ${option} in
    h) cli.usage ;;
    v) cli.version ;;
    l)
       regex='^([4-9]|[1-9][0-9])$'
       if ! [[ ${OPTARG} =~ $regex ]]; then
         cli.error "-l ${OPTARG}: invalid value"
       fi
       length=${OPTARG}
       ;;
    s)
       case ${OPTARG} in
         2)  symbols='01'      ;;
         10) symbols='[:digit:]'  ;;
         16) symbols='[:xdigit:]' ;;
         52) symbols='[:alpha:]'  ;;
         62) symbols='[:alnum:]'  ;;
         72) symbols='[:alnum:]?!()[]%$*#'           ;;
         82) symbols='[:alnum:]?!()[]%$*#&@:;.,<>/|' ;;
         94) symbols='[:alnum:][:punct:]'            ;;
         *) cli.error "-s ${OPTARG}: invalid value"  ;;
       esac
       ;;
    :) cli.error "-${OPTARG}: required an argument" ;;
    \?) cli.error "-${OPTARG}: unknown option" ;;
  esac
done
# parse cli <--


# main -->
LC_ALL=C < /dev/urandom tr -dc ${symbols} | head -c${length}
echo ''
# main <--

exit 0
